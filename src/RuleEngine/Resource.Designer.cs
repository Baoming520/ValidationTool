// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for license information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ODataValidator.RuleEngine {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ODataValidator.RuleEngine.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to parameter cannot be negative or zero..
        /// </summary>
        internal static string ArgumentNegativeOrZero {
            get {
                return ResourceManager.GetString("ArgumentNegativeOrZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to parameter cannot be null or empty..
        /// </summary>
        internal static string ArgumentNotNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentNotNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to named assembly is not found.
        /// </summary>
        internal static string AssemblyNotFound {
            get {
                return ResourceManager.GetString("AssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Http request got status code {0}..
        /// </summary>
        internal static string formatHttpStatusCode {
            get {
                return ResourceManager.GetString("formatHttpStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to payload length of {0}  exceeds the set limitation..
        /// </summary>
        internal static string formatPayloadSizeIsTooBig {
            get {
                return ResourceManager.GetString("formatPayloadSizeIsTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a supported URI scheme..
        /// </summary>
        internal static string formatSchemeNotSupported {
            get {
                return ResourceManager.GetString("formatSchemeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute {0} in Xml element is not found..
        /// </summary>
        internal static string formatXmlAttributeNotFound {
            get {
                return ResourceManager.GetString("formatXmlAttributeNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to error occurred when composing extension rules.
        /// </summary>
        internal static string InvalidExtensionRules {
            get {
                return ResourceManager.GetString("InvalidExtensionRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to invalid folder path.
        /// </summary>
        internal static string InvalidFolderPath {
            get {
                return ResourceManager.GetString("InvalidFolderPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to invalid xml rule.
        /// </summary>
        internal static string InvalidXmlRule {
            get {
                return ResourceManager.GetString("InvalidXmlRule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to expected metadata is not available..
        /// </summary>
        internal static string MetadataUnavailable {
            get {
                return ResourceManager.GetString("MetadataUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to named method is not found.
        /// </summary>
        internal static string MethodNotFound {
            get {
                return ResourceManager.GetString("MethodNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Feed resource is expected..
        /// </summary>
        internal static string NotFeed {
            get {
                return ResourceManager.GetString("NotFeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service document is expected..
        /// </summary>
        internal static string NotServiceDocument {
            get {
                return ResourceManager.GetString("NotServiceDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to result provider should not be null.
        /// </summary>
        internal static string NullResultProvider {
            get {
                return ResourceManager.GetString("NullResultProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Context is null..
        /// </summary>
        internal static string NullServiceContext {
            get {
                return ResourceManager.GetString("NullServiceContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to unexpected payload format..
        /// </summary>
        internal static string PayloadFormatUnexpected {
            get {
                return ResourceManager.GetString("PayloadFormatUnexpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to received payload has already exceeded the set limitation..
        /// </summary>
        internal static string PayloadSizeIsTooBig {
            get {
                return ResourceManager.GetString("PayloadSizeIsTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to regular expression not found..
        /// </summary>
        internal static string RegexPatternNotFound {
            get {
                return ResourceManager.GetString("RegexPatternNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Relax NG must have grammar as the root element..
        /// </summary>
        internal static string RelaxNGRootNode {
            get {
                return ResourceManager.GetString("RelaxNGRootNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to response has no payload..
        /// </summary>
        internal static string ResponseHasNoPayload {
            get {
                return ResourceManager.GetString("ResponseHasNoPayload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to named class is not found..
        /// </summary>
        internal static string TypeNotFound {
            get {
                return ResourceManager.GetString("TypeNotFound", resourceCulture);
            }
        }
    }
}
